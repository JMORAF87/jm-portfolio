openapi: 3.0.0
info:
  title: AI Chat Completions API
  version: 1.0.0
  description: API for generating AI chat completions, similar to OpenAI's chat endpoint.

servers:
  - url: http://localhost:8000/v1
    description: Local development server
  - url: https://api.example.com/v1
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ChatCompletionRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
          description: The ID of the model to use for the completion.
          example: "gpt-3.5-turbo"
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          description: A list of messages comprising the conversation so far.
        temperature:
          type: number
          format: float
          minimum: 0
          maximum: 2
          default: 1
          description: What sampling temperature to use, between 0 and 2.
        max_tokens:
          type: integer
          minimum: 1
          description: The maximum number of tokens to generate in the chat completion.
          example: 150
    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: ["system", "user", "assistant"]
          description: The role of the author of this message.
        content:
          type: string
          description: The contents of the message.
          example: "Hello, how are you?"
    ChatCompletionResponse:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for the chat completion.
          example: "chatcmpl-1234567890abcdefg"
        object:
          type: string
          description: The object type, which is always `chat.completion`.
          example: "chat.completion"
        created:
          type: integer
          description: The Unix timestamp (in seconds) of when the chat completion was created.
          example: 1677649420
        model:
          type: string
          description: The model used for the chat completion.
          example: "gpt-3.5-turbo-0613"
        choices:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionChoice'
          description: A list of chat completion choices.
        usage:
          $ref: '#/components/schemas/CompletionUsage'
    ChatCompletionChoice:
      type: object
      properties:
        index:
          type: integer
          description: The index of the choice in the list of choices.
          example: 0
        message:
          $ref: '#/components/schemas/ChatMessage'
          description: A chat completion message generated by the model.
        finish_reason:
          type: string
          enum: ["stop", "length", "content_filter", "tool_calls"]
          description: The reason the model stopped generating tokens.
          example: "stop"
    CompletionUsage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: The number of tokens in the prompt.
          example: 10
        completion_tokens:
          type: integer
          description: The number of tokens in the generated completion.
          example: 20
        total_tokens:
          type: integer
          description: The total number of tokens used in the request (prompt + completion).
          example: 30

paths:
  /chat/completions:
    post:
      summary: Creates a model response for the given chat conversation.
      operationId: createChatCompletion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
      responses:
        '200':
          description: Successful response from the chat completion API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
        '401':
          description: Unauthorized - Invalid API key.
        '400':
          description: Bad Request - Invalid input or parameters.
        '429':
          description: Rate Limit Exceeded - Too many requests in a given period.
        '500':
          description: Internal Server Error - Something went wrong on the server.
  /models:
    get:
      summary: Lists the available AI models.
      operationId: listModels
      responses:
        '200':
          description: A list of available models.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    example: "list"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Model'
        '401':
          description: Unauthorized - Invalid API key.
        '500':
          description: Internal Server Error.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Model:
      type: object
      properties:
        id:
          type: string
          description: The model ID.
          example: "gpt-4.1-mini"
        object:
          type: string
          example: "model"
        created:
          type: integer
          description: The Unix timestamp (in seconds ) of when the model was created.
          example: 1677649420
        owned_by:
          type: string
          example: "openai"
    ChatCompletionRequest:
